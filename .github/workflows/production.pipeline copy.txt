name: Deploy to VPS

on:
  pull_request:
    branches: 
    - production

env:
  IMAGE_NAME: auto-deploy-reactjs-server-vps
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}
  TAG: ${{ github.run_number }}
  ENVIRONMENT: production
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
  HOSTS: ${{ secrets.VPS_HOST }}
  USERNAME: ${{ secrets.VPS_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm install

    - name: Run linting and unit tests
      run: npm test

    - name: Build React app
      run: npm run build
    
    - name: Build Docker image
      run: |
        docker build . --file Dockerfile --tag waziat/auto-deploy-reactjs-server-vps:$ENVIRONMENT-latest

    - name: Extract the built image
      run: |
        # Extract the built image
        docker save -o image.tar $(docker images -q waziat/auto-deploy-reactjs-server-vps:$ENVIRONMENT-latest)
    
    - name: Install SSH key of target
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        name: id_rsa_new
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }} # will be appended to existing .ssh/known_hosts
        config: |                                         # will be appended to existing .ssh/config
          Host target
            HostName ${{secrets.VPS_HOST}}
            User ${{ secrets.USERNAME }}
            IdentityFile ~/.ssh/id_rsa_new.pub
    
    # - name: Set up SSH
    #   run: |
    #     mkdir -p ~/.ssh/
    #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ../private.key
    #     sudo chmod 600 ../private.key
    #     echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
    #     ssh-keyscan ${{secrets.VPS_HOST}} >> ~/.ssh/known_hosts
    #     cd /var/www/auto-deploy-reactjs-server-vps
    #     sudo git pull origin production
    #     # Copy image to server
    #     # sudo scp -i ~/ssh/id_rsa_new image.tar ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }}:/var/www/auto-deploy-reactjs-server-vps/image.tar
    #     # scp -i home/waziat/.ssh/id_rsa_new image.tar ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }}:/var/www/auto-deploy-reactjs-server-vps/image.tar .
    #   shell: bash

    
    # - name: copy file via ssh password
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: ${{ secrets.PORT }}
    #     source: "image.tar"
    #     target: "var/www/auto-deploy-reactjs-server-vps"

    # - name: Build Docker image
    #   run: |
    #     docker build . --file Dockerfile --tag waziat/auto-deploy-reactjs-server-vps:$ENVIRONMENT-latest

    # - name: Deploy
    #   uses: appleboy/ssh-action@v0.1.7
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: 22
    #     script: |
    #       cd /var/www/auto-deploy-reactjs-server-vps
    #       sudo git pull origin production
    
    # ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts
    # ssh-keyscan -t ed25519 ${{secrets.VPS_HOST}} >> ~/.ssh/known_hosts
    # chmod 600 ~/.ssh/known_hosts
    # ssh-keyscan -H ${{secrets.VPS_HOST}} > ~/.ssh/known_hosts
    # host: 103.13.206.22
    # username: waziat
    # password: Wanasaba10
    # - name: Build Docker image
    #   run: |
    #     docker build . --file Dockerfile --tag waziat/auto-deploy-reactjs-server-vps:$ENVIRONMENT-latest
    
    # - name: Deploy with Docker Compose
    #   run: |
    #     docker-compose down
    #     docker-compose up -d
      # script: |
      #   docker stop $IMAGE_NAME || true
      #   docker rm $IMAGE_NAME || true
      #   docker run -d --name $IMAGE_NAME -p 3011:3000 $DOCKER_REPOSITORY/$IMAGE_NAME:$ENVIRONMENT-$TAG
    
    # sudo scp ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }}:/var/www/auto-deploy-reactjs-server-vps/image.tar .

    # sudo docker load -i image.tar

    # sudo docker-compose down
    # sudo docker-compose up -d
